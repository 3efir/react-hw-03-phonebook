{"version":3,"sources":["components/ContactForm/index.jsx","components/ContactList/ContactItem/index.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","handleFormSubmit","evt","preventDefault","trim","alert","props","onAddContact","setState","handleChangeName","target","value","handleChangeNumber","className","onSubmit","this","type","onChange","Component","ContactItem","id","onDeleteContact","onClick","ContactList","list","map","item","key","Filter","onFilterChange","e","App","contacts","filter","handleAddContact","findIndex","prevState","uuidv4","handleFilterChange","text","handleDeleteContact","getFilteredList","toLocaleLowerCase","includes","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29ee9bb4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  }\n\n  handleFormSubmit = (evt) => {\n    evt.preventDefault();\n    if (!this.state.name.trim() || !this.state.number.trim()) {\n      alert('Fields Name and Number are required!');\n      return false;\n    }\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({ name: '', number: '' });\n  }\n\n  handleChangeName = (evt) => {\n    this.setState({ name: evt.target.value });\n  }\n\n  handleChangeNumber = (evt) => {\n    this.setState({ number: evt.target.value });\n  }\n\n  render() {\n    return (\n      <form className=\"contact-form\" onSubmit={this.handleFormSubmit}>\n        <label className=\"contact-form__label\">\n          Name\n          <input\n            className=\"contact-form__text-input\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChangeName}\n          />\n        </label>\n\n        <label className=\"contact-form__label\">\n          Number\n          <input\n            className=\"contact-form__text-input\"\n            type=\"text\"\n            value={this.state.number}\n            onChange={this.handleChangeNumber}\n          />\n        </label>\n\n        <button\n          className=\"contact-form__submit-btn\"\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n  <li className=\"contact-item\">\n    {name}: {number} <button className=\"contact-item__delete-btn\" onClick={() => onDeleteContact(id)}>Delete</button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ list, onDeleteContact }) => {\n  return (\n    <ul>\n      {list.map((item) => (\n        <ContactItem\n          key={item.id}\n          id={item.id}\n          name={item.name}\n          number={item.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  })),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        onChange={(e) => onFilterChange(e.target.value)}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  handleAddContact = (name, number) => {\n    if ( -1 !== this.state.contacts.findIndex((item) => item.name === name)) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { id: uuidv4(), name, number }],\n    }));\n  }\n\n  handleFilterChange = (text) => {\n    this.setState({ filter: text });\n  }\n\n  handleDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((item) => item.id !== id)\n    }));\n  }\n\n  getFilteredList = () => {\n    return (\n      this.state.filter ?\n      this.state.contacts.filter((item) => item.name.toLocaleLowerCase().includes(this.state.filter.toLocaleLowerCase())) :\n      this.state.contacts\n    );\n  }\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-root\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAddContact={this.handleAddContact}\n        />\n\n        <h1>Contacts</h1>\n        <Filter\n          onFilterChange={this.handleFilterChange}\n        />\n        <ContactList\n          list={this.getFilteredList()}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}